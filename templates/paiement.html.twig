{% include 'base.html.twig' %}

    {% block body %}
    <div class="container">
    <div class="container">
    <h4>Règlement de votre commande</h4>
    <p>C’est le moment tant attendu de valider votre création et commencer à écrire votre aventure entrepreneuriale !<br>
Bon à savoir : les frais administratifs qui s’ajoutent au prix du service sont des frais obligatoires 
imposés par l’Etat pour toute création de société </p>
<br>
    <form id="payment-form">
    <input class="form-control"  aria-describedby="emailHelp" type="text" id="email" placeholder="Email address" /><br>
  <div id="card-element">
    <!-- Elements will create input elements here -->
  </div>

  <!-- We'll put the error messages in this element -->
  <div id="card-errors" role="alert"></div>
  <br>

  <button class ="btn btn-primary btn-lg" id="submit">Payer</button>
</form>
</div>
</div>

    {% endblock %}
   
{% block javascripts %}
<script>
var stripe = Stripe('pk_test_51HIZ48Gv6xRvjguq77jvGlVhEViwVSopqYPXTcGRUEtuSZRB0gwFomUDAQiTgwUQAZ6jtlEYS4jzm5aF8zF81o4500ySW5NEQm');
var elements = stripe.elements();

// Set up Stripe.js and Elements to use in checkout form
var style = {
  base: {
    color: "#32325d",
  }
};

var card = elements.create("card", { style: style });
card.mount("#card-element");



cardElement.on('change', function(event) {
  var displayError = document.getElementById('card-errors');
  if (event.error) {
    displayError.textContent = event.error.message;
  } else {
    displayError.textContent = '';
  }
});


var form = document.getElementById('payment-form');

form.addEventListener('submit', function(ev) {
  ev.preventDefault();
  stripe.confirmCardPayment(clientSecret, {
    payment_method: {
      card: card,
      billing_details: {
        name: 'Jenny Rosen'
      }
    }
  }).then(function(result) {
    if (result.error) {
      // Show error to your customer (e.g., insufficient funds)
      console.log(result.error.message);
    } else {
      // The payment has been processed!
      if (result.paymentIntent.status === 'succeeded') {
        // Show a success message to your customer
        // There's a risk of the customer closing the window before callback
        // execution. Set up a webhook or plugin to listen for the
        // payment_intent.succeeded event that handles any business critical
        // post-payment actions.
        
      }
    }
  });
});
// Calls stripe.confirmCardPayment
// If the card requires authentication Stripe shows a pop-up modal to
// prompt the user to enter authentication details without leaving your page.
var payWithCard = function(stripe, card, clientSecret) {
  loading(true);
  stripe
    .confirmCardPayment(clientSecret, {
      receipt_email: document.getElementById('email').value,
      payment_method: {
        card: card
      }
    })
    .then(function(result) {
      if (result.error) {
        // Show error to your customer
        showError(result.error.message);
      } else {
        // The payment succeeded!
        orderComplete(result.paymentIntent.id);
      }
    });
};

</script>
   
{% endblock %}

